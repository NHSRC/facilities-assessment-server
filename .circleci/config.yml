version: 2
jobs:
  test:
    - image: circleci/openjdk:8-jdk

    - image: circleci/postgres:9.5-ram
      environment:
        - POSTGRES_USER: circleci
        - POSTGRES_DB: facilities_assessment_test

    working_directory: ~/facilities-assessment-server

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-

      - run: sudo apt-get install make postgresql-client

      - run: ./gradlew clean test

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - store_artifacts:
          path: ~/junit
      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: build/reports/tests/
          destination: testResultsHtml

  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/facilities-assessment-server

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          - v1-dependencies-

      - run: make build_server

      - store_artifacts:
          path: build/libs/
          destination: jars

      - run: mkdir -p ~/jars && cp build/libs/*.jar ~/jars/.

      - persist_to_workspace:
          root: ~/jars
          paths:
            - .

  deploy_to_jss_QA:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - attach_workspace:
          at: ~/jars

      - add_ssh_keys:
          fingerprints:
            - "1a:e5:4f:89:fd:93:89:1d:bf:08:4c:df:00:56:71:57"
      - run:
          name: Deploy to QA
          command: |
            scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -r ~/jars $JSS_USER@$JSS_HOST:~
            ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $JSS_USER@$JSS_HOST "sudo su app -c 'cp jars/*.jar $QA_JAR_PATH' && rm -rf jars && sudo systemctl restart qa-fab"

  deploy_to_jss_prod:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - attach_workspace:
          at: ~/jars

      - add_ssh_keys:
          fingerprints:
            - "1a:e5:4f:89:fd:93:89:1d:bf:08:4c:df:00:56:71:57"
      - run:
          name: Deploy to PROD
          command: |
            scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -r ~/jars $JSS_USER@$JSS_HOST:~
            ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $JSS_USER@$JSS_HOST "sudo su app -c 'cp jars/*.jar $JAR_PATH' && rm -rf jars && sudo systemctl restart fab"

workflows:
  version: 2
  test_build_and_deploy:
    jobs:
      - test
      - approve_build:
          type: approval
          requires:
            - test
      - build:
          requires:
            - approve_build
      - approve_JSS_deployment:
          type: approval
          requires:
            - build
      - deploy_to_jss_QA:
          requires:
            - approve_JSS_deployment
      - approve_prod_deployment:
          type: approval
          requires:
            - deploy_to_jss_QA
      - deploy_to_jss_prod:
          requires:
            - approve_prod_deployment
