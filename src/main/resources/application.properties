# Environment
# valid profiles = dev,qa,prod or production
spring.profiles.active=${FA_ENV}

# Database
spring.datasource.url=jdbc:postgresql://${database.host}:5432/${database}
spring.datasource.username=nhsrc
spring.datasource.password=password
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.maximumPoolSize=30
spring.datasource.hikari.leak-detection-threshold=30000

# JPA, Hibernate and Spring Data
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.jadira.usertype.autoRegisterUserTypes=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

# Data transfer
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain
server.compression.min-response-size=1
spring.http.multipart.max-file-size=5MB
spring.http.multipart.max-request-size=5MB

# REST API
spring.jackson.serialization.write-dates-as-timestamps=false
spring.data.rest.base-path=/api
spring.data.rest.maxPageSize=1000
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

# Security
spring.queries.users-query=select email, password, NOT inactive as active from users where email=? and system_user = false
spring.queries.roles-query=select u.email, 'ROLE_' || p.name from users u inner join user_role ur on (u.id = ur.user_id) inner join role r on(ur.role_id = r.id) inner join role_privilege rp on rp.role_id = r.id inner join privilege p on p.id = rp.privilege_id where u.email=?
server.session.persistent=true
server.session.timeout=432000

# Flyway
flyway.schemas=public
flyway.enabled=true
flyway.locations=classpath:db/migration

# Network
security.require-ssl=true
server.port=443
server.http.port=80
server.ssl.key-store=keystore.p12
server.ssl.key-store-password=password
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=tomcat

# Application
recording.mode=false
quartz.enabled=true
### Run at 01:00 am
cron.main=${FA_CRON_MAIN:0 0 1 * * ?}
facility.download.job.enabled=${FA_FACILITY_DOWNLOAD_JOB_ENABLED:false}
facility.metadata.download.job.enabled=${FA_FACILITY_METADATA_DOWNLOAD_JOB_ENABLED:false}

# Logging
debug=false

# Bugsnag
bugsnag.apiKey=${FA_BUGSNAG_API_KEY:dummy}
bugsnag.releaseStage=${spring.profiles.active}
bugsnag.notifyReleaseStages=${FA_BUGSNAG_STAGES:prod,production,qa}
bugsnag.implementationName=${FA_IMPLEMENTATION_NAME:dummy}

# NIN
nin.apiKey=${FA_NIN_API_KEY:dummy}

# Metabase
metabase.url=${FA_METABASE_URL:http://localhost:3000}
metabase.secret.key=${FA_METABASE_SECRET_KEY:dummy}

# Tomcat
server.tomcat.basedir=.
server.tomcat.accesslog.directory=log
server.tomcat.accesslog.enabled=false

#Health Check
healthcheck.download.facilities.job=${FA_HEALTHCHECK_DOWNLOAD_FACILITIES_JOB:dummy}
healthcheck.scoring.job=${FA_HEALTHCHECK_SCORING_JOB:dummy}
